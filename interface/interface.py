import streamlit as st
import pandas as pd
from modules import importer, classer_magasins, analyse_stock, distribution

def lancer_interface():
    st.title("üì¶ Application de Gestion de Mat√©riel")

    st.sidebar.header("Chargement des donn√©es")
    fichier = st.sidebar.file_uploader("Choisir un fichier (.csv ou .xlsx)", type=["csv", "xlsx"])

    if fichier:
        df = importer.importer_fichier(fichier)
        st.write("Aper√ßu des donn√©es :", df.head())

        # D√©tection du type de magasin
        df['Type'] = df['Magasin'].apply(classer_magasins.identifier_type_magasin)

        # S√©lection du mat√©riel
        materiel_dispo = df['Mat√©riel'].unique().tolist()
        materiel_choisi = st.selectbox("Choisir un mat√©riel √† distribuer", materiel_dispo)

        df_filtr√© = df[df['Mat√©riel'] == materiel_choisi]

        sources = df_filtr√©[df_filtr√©['Type'].isin(['disponible', 'central'])]
        cibles = analyse_stock.detecter_deficits(df_filtr√©[df_filtr√©['Type'] == 'exploitation'])

        st.subheader("üóÇÔ∏è Magasins sources (stock positif)")
        st.dataframe(sources)

        st.subheader("üìâ Magasins cibles (en d√©ficit)")
        st.dataframe(cibles)

        if not sources.empty and not cibles.empty:
            quantite_max = sources['Stock'].sum()
            quantite = st.slider("Quantit√© totale √† distribuer :", 1, int(quantite_max), 1)

            if st.button("Proposer une distribution"):
                transferts = distribution.proposer_distribution(sources.copy(), cibles.copy(), materiel_choisi, quantite)
                df_transferts = pd.DataFrame(transferts)
                st.success("Distribution g√©n√©r√©e :")
                st.dataframe(df_transferts)

                st.download_button(
                    "üíæ Exporter en CSV",
                    df_transferts.to_csv(index=False).encode('utf-8'),
                    "transferts.csv"
                )
        else:
            st.warning("Aucun magasin source ou cible valide.")
